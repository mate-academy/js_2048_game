{"version":3,"sources":["scripts/main.js"],"names":["gameField","score","cellsLength","gameClickBehavior","button","document","querySelector","fieldRow","querySelectorAll","gameScore","messageStart","messageLose","messageWin","getRandomNumber","Math","random","handleAddNumber","emptyRows","forEach","row","indexRow","cell","indexCell","push","length","floor","r","c","updateFieldCell","children","innerHTML","className","loseInTheGame","blockGame","filterZero","filter","slider","newRow","i","classList","remove","moveRight","moved","originalRow","reverse","arraysEqual","moveLeft","moveUp","column","originalColumn","moveDown","a","b","freeCell","some","addEventListener","contains","add","e","code"],"mappings":"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","file":"main.797ebde7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet score = 0;\nconst cellsLength = 4;\nlet gameClickBehavior = false;\n\nconst button = document.querySelector('.button');\nconst fieldRow = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nbutton.addEventListener('click', () => {\n  gameClickBehavior = true;\n\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerHTML = 'Restart';\n    messageStart.classList.add('hidden');\n\n    handleAddNumber();\n    handleAddNumber();\n    updateFieldCell();\n  } else if (button.classList.contains('restart')) {\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    gameClickBehavior = false;\n\n    gameField = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    gameClickBehavior = true;\n\n    score = 0;\n    handleAddNumber();\n    handleAddNumber();\n    updateFieldCell();\n  }\n});\n\nfunction getRandomNumber() {\n  return Math.random() >= 0.9 ? 4 : 2;\n};\n\nfunction handleAddNumber() {\n  const emptyRows = [];\n\n  gameField.forEach((row, indexRow) => {\n    row.forEach((cell, indexCell) => {\n      if (cell === 0) {\n        emptyRows.push([indexRow, indexCell]);\n      }\n    });\n  });\n\n  if (emptyRows.length === 0) {\n    return;\n  }\n\n  const [r, c] = emptyRows[Math.floor(Math.random() * emptyRows.length)];\n\n  gameField[r][c] = getRandomNumber();\n};\n\nfunction updateFieldCell() {\n  for (let r = 0; r < cellsLength; r++) {\n    for (let c = 0; c < cellsLength; c++) {\n      if (gameField[r][c] === 0) {\n        fieldRow[r].children[c].innerHTML = '';\n        fieldRow[r].children[c].className = 'field-cell';\n      } else {\n        fieldRow[r].children[c].innerHTML = gameField[r][c];\n\n        fieldRow[r].children[c].className = `\n        field-cell field-cell--${gameField[r][c]}\n        `;\n      }\n    }\n  }\n\n  loseInTheGame();\n  gameScore.innerHTML = score;\n}\n\nfunction blockGame() {\n  for (let r = 0; r < cellsLength; r++) {\n    for (let c = 0; c < cellsLength; c++) {\n      if (gameField[r][c] === 2048) {\n        return false;\n      }\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if ((blockGame() === false) || gameClickBehavior === false) {\n    return;\n  }\n\n  let moved = false;\n\n  switch (e.code) {\n    case 'ArrowRight':\n      moved = moveRight();\n      break;\n\n    case 'ArrowLeft':\n      moved = moveLeft();\n      break;\n\n    case 'ArrowUp':\n      moved = moveUp();\n      break;\n\n    case 'ArrowDown':\n      moved = moveDown();\n      break;\n\n    default:\n      return;\n  }\n\n  if (moved) {\n    handleAddNumber();\n    updateFieldCell();\n  }\n});\n\nfunction filterZero(row) {\n  return row.filter(r => r !== 0);\n}\n\nfunction slider(row) {\n  let newRow = row;\n\n  newRow = filterZero(newRow);\n\n  for (let i = 0; i < newRow.length; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n\n      if (newRow[i] === 2048) {\n        messageWin.classList.remove('hidden');\n      }\n    }\n  }\n\n  newRow = filterZero(newRow);\n\n  while (newRow.length < cellsLength) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction moveRight() {\n  let moved = false;\n\n  for (let r = 0; r < cellsLength; r++) {\n    let row = gameField[r];\n\n    const originalRow = [...row];\n\n    row.reverse();\n    row = slider(row);\n\n    row.reverse();\n\n    gameField[r] = row;\n\n    if (!moved && !arraysEqual(originalRow, row)) {\n      moved = true;\n    }\n  }\n\n  return moved;\n}\n\nfunction moveLeft() {\n  let moved = false;\n\n  for (let r = 0; r < cellsLength; r++) {\n    let row = gameField[r];\n\n    const originalRow = [...row];\n\n    row = slider(row);\n\n    gameField[r] = row;\n\n    if (!moved && !arraysEqual(originalRow, row)) {\n      moved = true;\n    }\n  }\n\n  return moved;\n}\n\nfunction moveUp() {\n  let moved = false;\n\n  for (let c = 0; c < cellsLength; c++) {\n    let column = [\n      gameField[0][c], gameField[1][c], gameField[2][c], gameField[3][c],\n    ];\n\n    const originalColumn = [...column];\n\n    column = slider(column);\n\n    for (let r = 0; r < cellsLength; r++) {\n      gameField[r][c] = column[r];\n    }\n\n    if (!moved && !arraysEqual(originalColumn, column)) {\n      moved = true;\n    }\n  }\n\n  return moved;\n}\n\nfunction moveDown() {\n  let moved = false;\n\n  for (let c = 0; c < cellsLength; c++) {\n    let column = [\n      gameField[0][c], gameField[1][c], gameField[2][c], gameField[3][c],\n    ];\n\n    const originalColumn = [...column];\n\n    column.reverse();\n    column = slider(column);\n    column.reverse();\n\n    for (let r = 0; r < cellsLength; r++) {\n      gameField[r][c] = column[r];\n    }\n\n    if (!moved && !arraysEqual(originalColumn, column)) {\n      moved = true;\n    }\n  }\n\n  return moved;\n}\n\nfunction arraysEqual(a, b) {\n  if (a === b) {\n    return true;\n  };\n\n  if (a == null || b == null) {\n    return false;\n  };\n\n  if (a.length !== b.length) {\n    return false;\n  };\n\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    };\n  }\n\n  return true;\n}\n\nfunction loseInTheGame() {\n  const freeCell = gameField.some(r => r.some(c => c === 0));\n\n  if (freeCell) {\n    return;\n  }\n\n  for (let r = 0; r < cellsLength; r++) {\n    for (let c = 0; c < cellsLength - 1; c++) {\n      if (gameField[r][c] === gameField[r][c + 1]\n        || gameField[c][r] === gameField[c + 1][r]) {\n        return;\n      }\n    }\n  }\n\n  messageLose.classList.remove('hidden');\n}\n"]}