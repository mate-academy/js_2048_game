{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n'use strict';\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.size = 4;\n        this.score = 0;\n        this.status = 'idle';\n        this.initialState = initialState;\n        this.board = initialState ? initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        }) : this.createEmptyBoard();\n        this.prevBoard = null;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                var _this = this;\n                return Array.from({\n                    length: this.size\n                }, function() {\n                    return Array(_this.size).fill(0);\n                });\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status !== 'idle') return;\n                this.status = 'playing';\n                this.addRandomNumber();\n                this.addRandomNumber();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = 'idle';\n                this.score = 0;\n                this.board = this.initialState ? this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                }) : this.createEmptyBoard();\n            }\n        },\n        {\n            // Moves\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.makeMove('left');\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.makeMove('right');\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.makeMove('up');\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.makeMove('down');\n            }\n        },\n        {\n            // Implements the game move logic\n            key: \"makeMove\",\n            value: function makeMove(direction) {\n                var _this = this;\n                var stackOnly = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                if (this.status !== 'playing') return;\n                // Save the state of the board before changes to compare\n                this.prevBoard = JSON.stringify(this.board);\n                // Transposition for vertical moves (up/down)\n                if (direction === 'up' || direction === 'down') this.board = this.transpose(this.board);\n                // Reverse rows for moves to the right (right) and down (down)\n                if (direction === 'right' || direction === 'down') this.board = this.board.map(function(row) {\n                    return row.reverse();\n                });\n                // Perform only stack (then merge if stackOnly = false)\n                this.board = this.board.map(function(row) {\n                    return _this.shiftRow(row);\n                });\n                if (!stackOnly) // Perform merge (cell merging)\n                this.board = this.board.map(function(row) {\n                    return _this.mergeRow(row);\n                });\n                // Restore the board's appearance after temporary changes\n                if (direction === 'right' || direction === 'down') this.board = this.board.map(function(row) {\n                    return row.reverse();\n                });\n                if (direction === 'up' || direction === 'down') this.board = this.transpose(this.board);\n                // If the board has changed, add a new random number\n                if (this.prevBoard !== JSON.stringify(this.board)) {\n                    this.addRandomNumber();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            // Shift a row to the left (remove all empty cells)\n            key: \"shiftRow\",\n            value: function shiftRow(row) {\n                var filteredRow = row.filter(function(cell) {\n                    return cell !== 0;\n                });\n                return (0, $227c6742e0ff6f82$export$71511d61b312f219)(filteredRow).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(this.size - filteredRow.length).fill(0)));\n            }\n        },\n        {\n            key: \"stackRow\",\n            value: function stackRow(row) {\n                var filteredRow = row.filter(function(cell) {\n                    return cell !== 0;\n                });\n                return (0, $227c6742e0ff6f82$export$71511d61b312f219)(Array(this.size - filteredRow.length).fill(0)).concat((0, $227c6742e0ff6f82$export$71511d61b312f219)(filteredRow));\n            }\n        },\n        {\n            // Merge adjacent tiles in a row\n            key: \"mergeRow\",\n            value: function mergeRow(row) {\n                for(var i = 0; i < row.length - 1; i++)if (row[i] !== 0 && row[i] === row[i + 1]) {\n                    row[i] *= 2;\n                    row[i + 1] = 0;\n                    this.score += row[i];\n                }\n                return this.shiftRow(row); // Re-shift row after merging\n            }\n        },\n        {\n            // Add a random number (2 or 4) to the board\n            key: \"addRandomNumber\",\n            value: function addRandomNumber() {\n                var emptyCells = [];\n                for(var i = 0; i < this.size; i++){\n                    for(var j = 0; j < this.size; j++)if (this.board[i][j] === 0) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), x = _emptyCells_Math_floor[0], y = _emptyCells_Math_floor[1];\n                this.board[x][y] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            // Transpose a matrix (swap rows with columns)\n            key: \"transpose\",\n            value: function transpose(board) {\n                var _this = this;\n                return board[0].map(function(_, colIndex) {\n                    return(// eslint-disable-next-line prettier/prettier\n                    _this.board.map(function(row) {\n                        return row[colIndex];\n                    }));\n                });\n            }\n        },\n        {\n            // Check if a move is possible (any merges or empty cells)\n            key: \"canMakeMove\",\n            value: function canMakeMove() {\n                if (this.board.some(function(row) {\n                    return row.includes(0);\n                })) return true;\n                for(var i = 0; i < this.size; i++)for(var j = 0; j < this.size - 1; j++){\n                    if (this.board[i][j] === this.board[i][j + 1]) return true;\n                     // Horizontal\n                    if (this.board[j][i] === this.board[j + 1][i]) return true;\n                     // Vertical\n                }\n                return false;\n            }\n        },\n        {\n            // Check the game state (win or lose)\n            key: \"checkGameStatus\",\n            value: function checkGameStatus() {\n                if (this.board.flat().includes(2048)) this.status = 'win';\n                else if (!this.canMakeMove()) this.status = 'lose';\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n'use strict';\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$scoreElement = document.querySelector('.game-score');\nvar $197cd56b15c33885$var$startButton = document.querySelector('.button');\nvar $197cd56b15c33885$var$cells = document.querySelectorAll('.field-cell');\nvar $197cd56b15c33885$var$messageWin = document.querySelector('.message-win');\nvar $197cd56b15c33885$var$messageLose = document.querySelector('.message-lose');\nvar $197cd56b15c33885$var$messageStart = document.querySelector('.message-start');\n$197cd56b15c33885$var$startButton.addEventListener('click', function() {\n    if ($197cd56b15c33885$var$game.getStatus() === 'idle') {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startButton.classList.replace('start', 'restart');\n        $197cd56b15c33885$var$startButton.textContent = 'Restart';\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$startButton.classList.replace('restart', 'start');\n        $197cd56b15c33885$var$startButton.textContent = 'Start';\n    }\n    $197cd56b15c33885$var$updateBoard();\n    $197cd56b15c33885$var$resetMessages();\n});\ndocument.addEventListener('keydown', function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== 'playing') return;\n    var stackOnly = e.shiftKey;\n    var actions = {\n        ArrowLeft: function() {\n            return $197cd56b15c33885$var$game.moveLeft();\n        },\n        ArrowRight: function() {\n            return $197cd56b15c33885$var$game.makeMove('right', stackOnly);\n        },\n        ArrowUp: function() {\n            return $197cd56b15c33885$var$game.moveUp();\n        },\n        ArrowDown: function() {\n            return $197cd56b15c33885$var$game.moveDown();\n        }\n    };\n    if (actions[e.key]) {\n        actions[e.key](); // Виконає спочатку stack, потім merge для ArrowRight\n        $197cd56b15c33885$var$updateBoard();\n        $197cd56b15c33885$var$checkMessages();\n    }\n});\nfunction $197cd56b15c33885$var$updateBoard() {\n    var state = $197cd56b15c33885$var$game.getState().flat();\n    state.forEach(function(value, index) {\n        var cell = $197cd56b15c33885$var$cells[index];\n        cell.textContent = value || '';\n        cell.className = \"field-cell \".concat(value ? \"field-cell--\".concat(value) : '');\n    });\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n}\nfunction $197cd56b15c33885$var$checkMessages() {\n    if ($197cd56b15c33885$var$game.getStatus() === 'win') $197cd56b15c33885$var$messageWin.classList.remove('hidden');\n    else if ($197cd56b15c33885$var$game.getStatus() === 'lose') $197cd56b15c33885$var$messageLose.classList.remove('hidden');\n}\nfunction $197cd56b15c33885$var$resetMessages() {\n    $197cd56b15c33885$var$messageWin.classList.add('hidden');\n    $197cd56b15c33885$var$messageLose.classList.add('hidden');\n    $197cd56b15c33885$var$messageStart.classList.add('hidden');\n}\n\n})();\n//# sourceMappingURL=index.1e229a9a.js.map\n","'use strict';\n\nimport Game from '../modules/Game.class.js';\n\nconst game = new Game();\n\nconst scoreElement = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button');\nconst cells = document.querySelectorAll('.field-cell');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n    startButton.classList.replace('start', 'restart');\n    startButton.textContent = 'Restart';\n  } else {\n    game.restart();\n    startButton.classList.replace('restart', 'start');\n    startButton.textContent = 'Start';\n  }\n\n  updateBoard();\n  resetMessages();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  const stackOnly = e.shiftKey;\n\n  const actions = {\n    ArrowLeft: () => game.moveLeft(),\n    ArrowRight: () => game.makeMove('right', stackOnly),\n    ArrowUp: () => game.moveUp(),\n    ArrowDown: () => game.moveDown(),\n  };\n\n  if (actions[e.key]) {\n    actions[e.key](); // Виконає спочатку stack, потім merge для ArrowRight\n    updateBoard();\n    checkMessages();\n  }\n});\n\nfunction updateBoard() {\n  const state = game.getState().flat();\n\n  state.forEach((value, index) => {\n    const cell = cells[index];\n\n    cell.textContent = value || '';\n    cell.className = `field-cell ${value ? `field-cell--${value}` : ''}`;\n  });\n\n  scoreElement.textContent = game.getScore();\n}\n\nfunction checkMessages() {\n  if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction resetMessages() {\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageStart.classList.add('hidden');\n}\n","'use strict';\n\nclass Game {\n  constructor(initialState = null) {\n    this.size = 4;\n    this.score = 0;\n    this.status = 'idle';\n    this.initialState = initialState;\n\n    this.board = initialState\n      ? initialState.map((row) => [...row])\n      : this.createEmptyBoard();\n    this.prevBoard = null;\n  }\n\n  createEmptyBoard() {\n    return Array.from({ length: this.size }, () => Array(this.size).fill(0));\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status !== 'idle') {\n      return;\n    }\n\n    this.status = 'playing';\n    this.addRandomNumber();\n    this.addRandomNumber();\n  }\n\n  restart() {\n    this.status = 'idle';\n    this.score = 0;\n\n    this.board = this.initialState\n      ? this.initialState.map((row) => [...row])\n      : this.createEmptyBoard();\n  }\n\n  // Moves\n  moveLeft() {\n    this.makeMove('left');\n  }\n\n  moveRight() {\n    this.makeMove('right');\n  }\n\n  moveUp() {\n    this.makeMove('up');\n  }\n\n  moveDown() {\n    this.makeMove('down');\n  }\n\n  // Implements the game move logic\n  makeMove(direction, stackOnly = false) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    // Save the state of the board before changes to compare\n    this.prevBoard = JSON.stringify(this.board);\n\n    // Transposition for vertical moves (up/down)\n    if (direction === 'up' || direction === 'down') {\n      this.board = this.transpose(this.board);\n    }\n\n    // Reverse rows for moves to the right (right) and down (down)\n    if (direction === 'right' || direction === 'down') {\n      this.board = this.board.map((row) => row.reverse());\n    }\n\n    // Perform only stack (then merge if stackOnly = false)\n    this.board = this.board.map((row) => this.shiftRow(row));\n\n    if (!stackOnly) {\n      // Perform merge (cell merging)\n      this.board = this.board.map((row) => this.mergeRow(row));\n    }\n\n    // Restore the board's appearance after temporary changes\n    if (direction === 'right' || direction === 'down') {\n      this.board = this.board.map((row) => row.reverse());\n    }\n\n    if (direction === 'up' || direction === 'down') {\n      this.board = this.transpose(this.board);\n    }\n\n    // If the board has changed, add a new random number\n    if (this.prevBoard !== JSON.stringify(this.board)) {\n      this.addRandomNumber();\n      this.checkGameStatus();\n    }\n  }\n\n  // Shift a row to the left (remove all empty cells)\n  shiftRow(row) {\n    const filteredRow = row.filter((cell) => cell !== 0);\n\n    return [...filteredRow, ...Array(this.size - filteredRow.length).fill(0)];\n  }\n\n  stackRow(row) {\n    const filteredRow = row.filter((cell) => cell !== 0);\n\n    return [...Array(this.size - filteredRow.length).fill(0), ...filteredRow];\n  }\n\n  // Merge adjacent tiles in a row\n  mergeRow(row) {\n    for (let i = 0; i < row.length - 1; i++) {\n      if (row[i] !== 0 && row[i] === row[i + 1]) {\n        row[i] *= 2;\n        row[i + 1] = 0;\n        this.score += row[i];\n      }\n    }\n\n    return this.shiftRow(row); // Re-shift row after merging\n  }\n\n  // Add a random number (2 or 4) to the board\n  addRandomNumber() {\n    const emptyCells = [];\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] === 0) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const [x, y] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[x][y] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  // Transpose a matrix (swap rows with columns)\n  transpose(board) {\n    return board[0].map((_, colIndex) =>\n      // eslint-disable-next-line prettier/prettier\n      this.board.map((row) => row[colIndex]));\n  }\n\n  // Check if a move is possible (any merges or empty cells)\n  canMakeMove() {\n    if (this.board.some((row) => row.includes(0))) {\n      return true;\n    }\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size - 1; j++) {\n        if (this.board[i][j] === this.board[i][j + 1]) {\n          return true;\n        } // Horizontal\n\n        if (this.board[j][i] === this.board[j + 1][i]) {\n          return true;\n        } // Vertical\n      }\n    }\n\n    return false;\n  }\n\n  // Check the game state (win or lose)\n  checkGameStatus() {\n    if (this.board.flat().includes(2048)) {\n      this.status = 'win';\n    } else if (!this.canMakeMove()) {\n      this.status = 'lose';\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["a","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","size","score","status","board","map","row","createEmptyBoard","prevBoard","key","value","_this","fill","addRandomNumber","makeMove","direction","stackOnly","JSON","stringify","transpose","reverse","shiftRow","mergeRow","checkGameStatus","filteredRow","filter","cell","concat","emptyCells","j","push","_emptyCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","next","done","err","x","y","_","colIndex","some","includes","flat","canMakeMove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","__esModule","default","$197cd56b15c33885$var$scoreElement","document","querySelector","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$cells","querySelectorAll","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$updateBoard","state","getState","forEach","index","textContent","className","getScore","addEventListener","getStatus","start","classList","replace","restart","add","e","shiftKey","actions","ArrowLeft","moveLeft","ArrowRight","ArrowUp","moveUp","ArrowDown","moveDown","remove"],"version":3,"file":"index.1e229a9a.js.map"}